syntax = "proto3";

package yelp.review.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "yelp/common/review/v1/review.proto";
import "yelp/common/review/v1/id.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Yelp"
    description: "Yelp application"
    version: "1.0"
  }
  security_definitions: {
    security: {
      key: "jwt"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "jwt token for authentication"
      }
    }
  }
  security: {
    security_requirement: {
      key: "jwt"
    }
  }
};

service ReviewService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "Review"
    description: "review section"
  };

  rpc AddReview(AddReviewRequest) returns (AddReviewResponse) {
    option (google.api.http) = {
      post: "/v1/review"
      body: "*"
    };
  }

  rpc ListReviews(ListReviewsRequest) returns (ListReviewsResponse) {
    option (google.api.http) = {
      get: "/v1/review"
    };
  }
}

message AddReviewRequest {
  string title = 1 [(buf.validate.field).required = true];
  string description = 2 [(buf.validate.field).required = true];
}

message AddReviewResponse {
  yelp.common.review.v1.ID id = 1;
}

message ListReviewsRequest {}

message ListReviewsResponse {
  repeated yelp.common.review.v1.Review reviews = 1;
}
